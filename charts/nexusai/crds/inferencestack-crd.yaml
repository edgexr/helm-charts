apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: inferencestacks.apps.edgexr.org
spec:
  group: apps.edgexr.org
  names:
    kind: InferenceStack
    listKind: InferenceStackList
    plural: inferencestacks
    singular: inferencestack
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: InferenceStack is the Schema for the inferencestacks API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: InferenceStackSpec defines the desired state of InferenceStack
            properties:
              EmbeddingsCollection:
                default: pdfs
                description: Embeddings collection name
                type: string
              chatbotAppImage:
                default: ghcr.io/levshvarts/edgecloud-rag:2025-04-03
                description: ChatbotApp image
                type: string
              embeddingsUrl:
                default: http://embeddings/embed
                description: Embeddings cluster API endpoint
                type: string
              gpuCount:
                default: 0
                description: Number of GPUs available to this stack
                format: int32
                type: integer
              llamaCppImage:
                default: ghcr.io/ggerganov/llama.cpp:server-b4149
                description: Llamacpp image
                type: string
              llmModel:
                default: llama-3.2-3b
                description: LLM model for inference stack
                type: string
              llmUrl:
                default: http://llm/v1/chat/completions
                description: LLM cluster API endpoint
                type: string
              localStorage:
                default: false
                description: Enable deployment of MinIO stack
                type: boolean
              minioAccessKey:
                default: minio
                description: Minio default access key
                type: string
              minioAlias:
                default: myminio
                description: Minio alias name
                type: string
              minioBucketName:
                default: pdfs
                description: Minio bucket name
                type: string
              minioImage:
                default: docker.io/minio/minio::RELEASE.2024-11-07T00-52-20Z
                description: Minio image
                type: string
              minioSecretKey:
                default: bWluaW8xMjMK
                description: Minio base64 encoded secret key
                type: string
              minioServerUrl:
                default: storage:9000
                description: Minio server URL - minio cluster url
                type: string
              storageClassName:
                default: standard
                description: Default storage class
                type: string
              storageWebhookEndpoint:
                default: http://webhook:8082
                description: Webhook api endpoint
                type: string
              storageWebhookPort:
                default: 8082
                description: Webhook port
                format: int32
                type: integer
              vectorDbHost:
                default: vectordb
                description: VectorDB cluster hostname
                type: string
              vectorDbImage:
                default: ghcr.io/chroma-core/chroma:0.5.16
                description: ChromaDb image
                type: string
              vectorDbPort:
                default: 8000
                description: VectorDB cluster port number
                format: int32
                type: integer
            required:
            - EmbeddingsCollection
            - chatbotAppImage
            - embeddingsUrl
            - gpuCount
            - llamaCppImage
            - llmModel
            - llmUrl
            - localStorage
            - minioAccessKey
            - minioAlias
            - minioBucketName
            - minioImage
            - minioSecretKey
            - minioServerUrl
            - storageClassName
            - storageWebhookEndpoint
            - storageWebhookPort
            - vectorDbHost
            - vectorDbImage
            - vectorDbPort
            type: object
          status:
            description: InferenceStackStatus defines the observed state of InferenceStack
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
